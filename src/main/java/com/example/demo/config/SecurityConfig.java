package com.example.demo.config;nnimport org.springframework.context.annotation.Bean;nimport org.springframework.context.annotation.Configuration;nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;nimport org.springframework.security.config.http.SessionCreationPolicy;nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;nimport org.springframework.security.crypto.password.PasswordEncoder;nimport org.springframework.security.web.SecurityFilterChain;nimport org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;nn@Configurationn@EnableWebSecuritynpublic class SecurityConfig {n    n    @Beann    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {n        httpn            .csrf(csrf -> csrf.disable())n            .authorizeHttpRequests(auth -> authn                .requestMatchers("/api/auth/**").permitAll()n                .requestMatchers("/h2-console/**").permitAll()n                .anyRequest().authenticated()n            )n            .sessionManagement(session -> sessionn                .sessionCreationPolicy(SessionCreationPolicy.STATELESS)n            )n            .headers(headers -> headers.frameOptions().disable());n        n        return http.build();n    }n    n    @Beann    public PasswordEncoder passwordEncoder() {n        return new BCryptPasswordEncoder();n    }n}