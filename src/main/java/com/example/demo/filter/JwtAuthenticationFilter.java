package com.example.demo.filter;nnimport com.example.demo.util.JwtUtil;nimport jakarta.servlet.FilterChain;nimport jakarta.servlet.ServletException;nimport jakarta.servlet.http.HttpServletRequest;nimport jakarta.servlet.http.HttpServletResponse;nimport org.springframework.beans.factory.annotation.Autowired;nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;nimport org.springframework.security.core.context.SecurityContextHolder;nimport org.springframework.security.core.userdetails.UserDetails;nimport org.springframework.security.core.userdetails.UserDetailsService;nimport org.springframework.security.web.authentication.WebAuthenticationDetailsSource;nimport org.springframework.stereotype.Component;nimport org.springframework.web.filter.OncePerRequestFilter;nnimport java.io.IOException;nn@Componentnpublic class JwtAuthenticationFilter extends OncePerRequestFilter {n    n    @Autowiredn    private JwtUtil jwtUtil;n    n    @Autowiredn    private UserDetailsService userDetailsService;n    n    @Overriden    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)n            throws ServletException, IOException {n        n        final String authorizationHeader = request.getHeader("Authorization");n        n        String username = null;n        String jwt = null;n        n        if (authorizationHeader != null && authorizationHeader.startsWith("Bearer ")) {n            jwt = authorizationHeader.substring(7);n            username = jwtUtil.extractUsername(jwt);n        }n        n        if (username != null && SecurityContextHolder.getContext().getAuthentication() == null) {n            UserDetails userDetails = this.userDetailsService.loadUserByUsername(username);n            n            if (jwtUtil.validateToken(jwt, userDetails.getUsername())) {n                UsernamePasswordAuthenticationToken authToken = new UsernamePasswordAuthenticationToken(n                    userDetails, null, userDetails.getUsername().getAuthorities());n                authToken.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));n                SecurityContextHolder.getContext().setAuthentication(authToken);n            }n        }n        filterChain.doFilter(request, response);n    }n}