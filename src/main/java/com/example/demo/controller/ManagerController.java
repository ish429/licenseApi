package com.example.demo.controller;nnimport com.example.demo.entity.Manager;nimport com.example.demo.service.ManagerService;nimport org.springframework.beans.factory.annotation.Autowired;nimport org.springframework.http.ResponseEntity;nimport org.springframework.web.bind.annotation.*;nnimport java.util.List;nn@RestControllern@RequestMapping("/api/managers")npublic class ManagerController {n    n    @Autowiredn    private ManagerService managerService;n    n    @GetMappingn    public ResponseEntity<List<Manager>> getAllManagers() {n        List<Manager> managers = managerService.getAllManagers();n        return ResponseEntity.ok(managers);n    }n    n    @GetMapping("/{id}")n    public ResponseEntity<Manager> getManagerById(@PathVariable Long id) {n        Manager manager = managerService.getManagerById(id);n        if (manager != null) {n            return ResponseEntity.ok(manager);n        }n        return ResponseEntity.notFound().build();n    }n    n    @PostMappingn    public ResponseEntity<Manager> createManager(@RequestBody Manager manager) {n        Manager savedManager = managerService.saveManager(manager);n        return ResponseEntity.ok(savedManager);n    }n    n    @PutMapping("/{id}")n    public ResponseEntity<Manager> updateManager(@PathVariable Long id, @RequestBody Manager manager) {n        Manager updatedManager = managerService.updateManager(id, manager);n        if (updatedManager != null) {n            return ResponseEntity.ok(updatedManager);n        }n        return ResponseEntity.notFound().build();n    }n    n    @DeleteMapping("/{id}")n    public ResponseEntity<Void> deleteManager(@PathVariable Long id) {n        boolean deleted = managerService.deleteManager(id);n        if (deleted) {n            return ResponseEntity.ok().build();n        }n        return ResponseEntity.notFound().build();n    }n}